Initializations:
frontier: List to hold the nodes that have no incoming edges.
next_frontier: List to hold the nodes that will be visited in the next iteration.
group: Dictionary to hold the group order of each node.


FOR each node i in the graph DO:
     IF upper[i] = 1 THEN:
         ADD i TO frontier.
     END IF
END FOR
   
Initialize a variable "rounds" to 0.
WHILE the "frontier" is not empty DO:
     INCREMENT the "rounds".
     FOR each node in the "frontier" DO:
         SET group[node] TO rounds.
         FOR each edge that goes out from the node DO:
             GET the destination node of the edge
             DECREMENT the number of incoming edges for the destination node
             IF GraphNodes[Edge[j]].no_of_edges = 0 THEN:
                 ADD the destination node to the "next_frontier".
             END IF
         END FOR
     END FOR
     SET the "frontier" List to be equal to the "next_frontier" List.
     CLEAR the "next_frontier" list.
END WHILE
   
RETURN the "group" dictionary.
